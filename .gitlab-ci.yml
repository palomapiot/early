image: docker:latest

services:
  - docker:dind

.before_script_template:
  before_script:
    # Add Docker-compose to Docker image
    - apk add --no-cache py-pip
    - cat $DEPLOY_PROD_ENV > deploy-production-var.env
    - cat $DEPLOY_STAG_ENV > deploy-staging-var.env
    - pip install docker-compose==1.23.2
    - docker info
    - docker-compose --version

stages:
  - test
  - build
  - sonar
  - deploy

variables:
    CONTAINER_IMAGE: $REGISTRY_NAME:$CI_BUILD_REF_NAME
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task


test:
  stage: test
  extends: .before_script_template
  script:
    - echo "Starting tests"
    - docker-compose run web sh -c "python manage.py test"

build:
  stage: build
  extends: .before_script_template
  script:
    - echo "Building the app"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE

sonarcloud-check:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  allow_failure: true
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master
    - develop
    - staging
    - production

deploy_staging:
  stage: deploy
  extends: .before_script_template
  only:
  - staging
  - develop
  script:
    - echo "Deploying the app"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull $CONTAINER_IMAGE
    - docker tag $CONTAINER_IMAGE registry.heroku.com/$HEROKU_STAGING_APP/web
    - docker-compose run deploy_staging sh -c "python manage.py migrate"
    - docker push registry.heroku.com/$HEROKU_STAGING_APP/web
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $HEROKU_STAGING_APP

deploy_production:
  stage: deploy
  extends: .before_script_template
  only:
  - production
  - master
  script:
    - echo "Deploying the app"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull $CONTAINER_IMAGE
    - docker tag $CONTAINER_IMAGE registry.heroku.com/$HEROKU_PRODUCTION_APP/web
    - docker-compose run deploy_production sh -c "python manage.py migrate"
    - docker push registry.heroku.com/$HEROKU_PRODUCTION_APP/web
    - docker run --rm -e $HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $HEROKU_PRODUCTION_APP
